<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
    <mapper namespace="com.xunmaw.cms.module.admin.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.xunmaw.cms.module.admin.model.User" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
        <collection property="roles" column="role_id" javaType="ArrayList" ofType="com.xunmaw.cms.module.admin.model.Role">
            <result property="roleId" jdbcType="INTEGER" column="role_id"/>
            <result property="name" jdbcType="VARCHAR" column="role_name"/>
            <result property="description" jdbcType="VARCHAR" column="role_description"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List" >
        id, user_id, username, password, salt, nickname, email, phone, sex, age, img, status,
        create_time, update_time, last_login_time
    </sql>

    <select id="selectUsers" resultMap="BaseResultMap" parameterType="com.xunmaw.cms.module.admin.model.User">
        SELECT a.*,c.role_id AS role_id,c.name AS role_name,c.description AS  role_description
        FROM user a
        left join user_role b on a.user_id = b.user_id
        left join role c on b.role_id = c.role_id
        WHERE a.status=1
        <if test="user.username !=null and user.username != ''">
            AND a.username like concat('%', #{user.username}, '%')
        </if>
        <if test="user.email !=null and user.email != ''">
            AND a.email like concat('%', #{user.email}, '%')
        </if>
        <if test="user.phone !=null and user.phone != ''">
            AND a.phone like concat('%', #{user.phone}, '%')
        </if>
    </select>

    <select id="findByRoleId" resultMap="BaseResultMap">
        SELECT a.user_id, a.username, a.password, a.salt, a.email, a.phone, a.sex, a.age, a.status,
        a.create_time, a.update_time, a.last_login_time FROM user a INNER JOIN user_role b ON a.user_id = b.user_id WHERE b.role_id = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="findByRoleIds" resultMap="BaseResultMap">
        SELECT a.user_id, a.username, a.password, a.salt, a.email, a.phone, a.sex, a.age, a.status,
        a.create_time, a.update_time, a.last_login_time FROM user a INNER JOIN user_role b ON a.user_id = b.user_id
        WHERE b.role_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>